import streamlit as st
import pandas as pd

import pdfkit
from datetime import datetime
config = pdfkit.configuration(wkhtmltopdf=r"C:\Program Files\wkhtmltopdf\bin\wkhtmltopdf.exe")


st.set_page_config(page_title="Rapport de mise en service",page_icon="üßä")
st.title("Rapport de mise en service")
st.header("Informations de base")
info_base = {}
with st.expander("Informations sur le site"):
    info_base["N¬∞ de la machine"] = st.text_input("N¬∞ de la machine")
    info_base["Adresse de l'installation"] = st.text_input("Adresse de l'installation")
    info_base["Utilisateur"] = st.text_input("Utilisateur")
    info_base["Date de mise en service"] = st.date_input("Date de mise en service").strftime("%d/%m/%Y")
    info_base["FF"] = st.text_input("FF")
    info_base["Huile"] = st.text_input("Huile")
with st.expander("Informations sur l'installateur"):
    info_base["Nom du Technicien"] = st.text_input("Nom du Technicien")
    info_base["N¬∞ de t√©l√©phone technicien"]  = st.text_input("Num√©ro de t√©l√©phone")
    info_base["Charg√© de projet"]  = st.text_input("Charg√© de projet")

st.write("R√©sum√© des informations")
st.json(info_base,expanded=False)
st.divider()
st.header("D√©marrage de la mise en service")
validation_preconisation = st.selectbox("Avez-vous pris connaissance des pr√©conisations constructeur ?", ("Oui", "Non"),index=1)
if validation_preconisation == "Oui":
    st.info("Veuillez v√©rifier tous les supports et fixations de la machine", icon="‚ÑπÔ∏è")
elif validation_preconisation == "Non":
    st.warning("Veuillez prendre connaissance des pr√©conisations constructeur avant la mise en service", icon="‚ö†Ô∏è")
st.divider()
st.header("Test de pression")
st.subheader("test de pression ps +10%")
validation_test_pression = st.selectbox("Avez-vous test√© le circuit √† une pression ps+10% ?", ("Oui", "Non"),index=1)
if validation_test_pression == "Oui":
    st.info("Renseigner la dur√©e de mise sous pression",icon="‚ÑπÔ∏è")
elif validation_test_pression == "Non":
    st.warning("Veuillez tester le circuit √† une pression ps+10\% d'une dur√©e de 48h",icon="‚ö†Ô∏è")
    
df_pression = pd.DataFrame({"Circuit":["Bp","Mp","Hp"],"Pression (Bar)":[0,0,0],"Dur√©e(h)":[0,0,0]}).set_index("Circuit")
df_pression = st.data_editor(df_pression)
st.info("Si existence d'une soupape sur le circuit, Pt = p(soupape) - 10% p(soupape) = 0.8 p(soupape)",icon="‚ö†Ô∏è")
fuite = st.selectbox("Avez-vous constat√© une fuite sur le circuit frigorifique ?", ("Oui", "Non"))
st.divider()
st.header("Partie √©lectrique")
validation_EPI = st.selectbox("Avez-vous vos EPI?",("Oui","Non"),index=1)
validation_schema = ""
if validation_EPI == "Oui":
    validation_schema = st.selectbox("Avez-vous le sch√©ma √©lectrique et le PID de l'installation ?", ("Oui", "Non"),index=1)
    if validation_schema == "Non":
        st.warning("Veuillez procurer le sch√©ma √©lectrique + PID de la machine")
elif validation_EPI == "Non":
    st.error("Veuillez vous √©quiper de vos EPI avant toute mise en service √©lectrique",icon="üö®")

#######################################
if validation_schema == "Oui":
    st.subheader("Compresseurs")
    st.write("La machine contient combien de CP ?")
    nb_compresseur = st.text_input("Nombres: ")
    
    try:
        dict_compresseurs = {
            f"CP{n}": ["","","","","","","",""] for n in range(1, int(nb_compresseur) + 1)
        }
        df_compresseur = pd.DataFrame(
        {
            "Information":["Fabriquement","Mod√®le","N¬∞ de s√©rie","Tension (V)","Fr√©quence (Hz)","couplage(Œî) ou Y", "Intensit√© plaqu√© (A)","Intensit√© r√®gle en GV (A)"],
            **dict_compresseurs
        }).set_index("Information")
    
        df_compresseur = st.data_editor(df_compresseur)
    except:
        st.info("D√©finir le nombre de compresseurs")
    
    st.info("Veuillez v√©rifier le serrage sur les circuits de puissance et de commande",icon="‚ö†Ô∏è")

    ###################################################################
    st.subheader("Kriwan")
    validation_kriwon = st.selectbox("Avez-vous test√© la sonde de Kriwan de tous les compresseurs ?", ("Oui", "Non"),index=1)
    st.subheader("Essai pressorstats Bp/Hp de s√©curit√©")
    validation_pressorstat = st.selectbox("Avez-vous test√© les pressorstats Bp/Hp de s√©curit√© de chaque CP ?", ("Oui", "Non"),index=1)
    st.subheader("Essai de contr√¥leur de niveau d'huile")
    validation_huile = st.selectbox("Avez-vous test√© le contr√¥leur de niveau d'huile ?",("Oui", "Non"),index=1)
    st.divider()
    st.header("Evacuation de vide")
    validation_resistance = st.selectbox("Resistance de carter des compresseurs en marche pendant le tirage au vide ?",("Oui", "Non"))
    temp_ext = st.slider("Veuillez renseigner la temp√©rature ext√©rieur en ¬∞C",min_value=-20,max_value=50,value=20)
    pression_vide = st.number_input("Veuillez renseigner la pression de vide affich√©e au vacuometre em mbar")
    validation_hygro = st.selectbox("Le voyant hygroscopique est de couleur verte (bouteille liquide)",("Oui", "Non"),index=1)
    st.divider()
    st.header("Niveau d'huile")
    st.info("Veuillez v√©rifier que l'huile correspond au type d'huile mentionn√© sur l'√©tiquette du chassis")
    validation_qt_huile = st.selectbox("Quantit√© d'huile remplie est inf√©rieure ou √©gale √† la contenance de r√©servoir d'huile mentionn√©e sur la plaque signal√©tique",("Oui", "Non"),index=1)
    st.divider()
    st.header("Mise sous pression du syst√®me")
    pression_vapeur = st.number_input("Quelle est la pression (bar) de vapeur de fluide frigog√®ne rempli dans toutes les sections de l'installation ?")
    st.divider()
    st.header("Rapport PDF")
    # G√©n√©re un rapport PDF regroupant toutes les informations rentr√©es par l'utilisateur
    if st.button("G√©n√©rer le rapport PDF"):
        html = f"""
            <html>
                <head>
                    <meta charset="UTF-8">
                    <title>Rapport PDF</title>
                </head>
                <body>
                    <h1>Informations de base</h1>
                    <ul>
                        <li>N¬∞ de la machine: {info_base.get("N¬∞ de la machine", "")}</li>
                        <li>Adresse de l'installation: {info_base.get("Adresse de l'installation", "")}</li>
                        <li>Utilisateur: {info_base.get("Utilisateur", "")}</li>
                        <li>Date de mise en service: {info_base.get("Date de mise en service", "")}</li>
                        <li>FF: {info_base.get("FF", "")}</li>
                        <li>Huile: {info_base.get("Huile", "")}</li>
                    </ul>
                    <h1>Informations sur l'installateur</h1>
                    <ul>
                        <li>Nom du Technicien: {info_base.get("Nom du Technicien", "")}</li>
                        <li>N¬∞ de t√©l√©phone technicien: {info_base.get("N¬∞ de t√©l√©phone technicien", "")}</li>
                        <li>Charg√© de projet: {info_base.get("Charg√© de projet", "")}</li>
                    </ul>
                    <h1>D√©marrage de la mise en service</h1>
                    <ul>
                        <li>Avez-vous pris connaissance des pr√©conisations constructeur ?: {validation_preconisation}</li>
                    </ul>
                    <h1>Test de pression</h1>
                    <ul>
                        <li>Avez-vous test√© le circuit √† une pression p5+10% ?: {validation_test_pression}</li>
                    </ul>
                    <h1>Pression</h1>
                    {df_pression.to_html()}
                    <ul>
                        <li>Avez-vous constat√© une fuite sur le circuit frigorifique ?: {fuite}</li>
                    </ul>
                    <h1>Partie √©lectrique</h1>
                    <ul>
                        <li>Avez-vous vos EPI?: {validation_EPI}</li>
                        <li>Avez-vous le sch√©ma √©lectrique et le PIB de l'installation ?: {validation_schema}</li>
                    </ul>
                    <h2>Compresseurs</h2>
                    {df_compresseur.to_html()}
                    <ul>
                        <li>Avez-vous test√© la sonde de Kriwan de tous les compresseurs ?: {validation_kriwon}</li>
                        <li>Avez-vous test√© les pressostats Bp/Hp de s√©curit√© de chaque CP ?: {validation_pressorstat}</li>
                        <li>Avez-vous test√© le contr√¥leur de niveau d'huile ?: {validation_huile}</li>
                    </ul>
                    <h1>Evacuation de vide</h1>
                    <ul>
                        <li>Resistance de carter compresseurs en marche pendant le triage au vide ?: {validation_resistance}</li>
                        <li>Temp√©rature ext√©rieur en ¬∞C: {temp_ext}</li>
                        <li>Pression de vide affich√©e au vacametre em mbar: {pression_vide}</li>
                        <li>Le voyant hygroscopique est de couleur verte (bouteille liquide) ?: {validation_hygro}</li>
                    </ul>
                    <h1>Niveau d'huile</h1>
                    <ul>
                        <li>Quantit√© d'huile remplie est inf√©rieure ou √©gale √† la contenance de r√©servoir d'huile mentionn√©e sur la plaque signal√©tique ?: {validation_qt_huile}</li>
                    </ul>
                    <h1>Mise sous pression du syst√®me</h1>
                    <ul>
                        <li>Pression (bar) de vapeur de fluide frigog√®ne rempli dans toutes les sections de l'installation ?: {pression_vapeur}</li>
                    </ul>
                </body>
            </html>
        """

        nom_fichier = f'Rapport_mise_en_service_{datetime.today().day}{datetime.today().month}{datetime.today().year}.pdf'

        pdfkit.from_string(html, nom_fichier)

        with open(nom_fichier,"rb") as pdf_file:
            PDFbyte = pdf_file.read()
        st.download_button("T√©l√©charger le rapport PDF", PDFbyte, nom_fichier, mime="application/octet-stream")